version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: medicine_stock_db
      POSTGRES_USER: medicine_user
      POSTGRES_PASSWORD: medicine_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medicine_user -d medicine_stock_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_ENGINE=postgresql
      - DB_NAME=medicine_stock_db
      - DB_USER=medicine_user
      - DB_PASSWORD=medicine_password
      - DB_HOST=db
      - DB_PORT=5432
      - SECRET_KEY=your-secret-key-for-development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data

  # Optional: Nginx for production (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - static_volume:/app/staticfiles
  #     - media_volume:/app/media
  #   depends_on:
  #     - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
  # redis_data:  # Uncomment if using Redis

networks:
  default:
    name: medicine_stock_network